Product Requirements Document (PRD)

1. Product Name
Personalized News Recommendation Engine

2. Purpose
To deliver a personalized, intelligent news feed to users based on their previous activity (searches, views, likes) using a combination of backend APIs, machine learning, and a modern frontend interface.

3. Target Users
Individuals who want to stay updated with news tailored to their interests.

Developers looking to learn how to build an end-to-end personalized recommendation engine.

4. Core Features
a. User Authentication
Sign up with email and password

Secure password hashing using bcrypt

Login endpoint (with token-based auth)

JWT-based session management

b. User Interaction Tracking
Log user interactions: article views, likes, skips

Store interaction metadata (timestamp, keywords)

c. Article Management
Ingest news articles (initially hardcoded or batch-loaded, later via API/scraper)

Store articles in DB with metadata: title, source, content, tags

d. Recommendation Engine
Phase 1: Keyword-based filtering (matching article tags to past searches)

Phase 2: Add collaborative filtering using Surprise or scikit-learn

Phase 3: Hybrid recommendation engine (content + behavior)

5. REST API
POST /users/signup – register

POST /users/login – authenticate

GET /users/user/{id} – fetch user profile

GET /articles/ – list articles

GET /recommendations/ – list recommended articles for logged-in user

POST /interactions/ – record user actions

6. Frontend (React)
User login/signup

Feed of personalized articles

Buttons for liking/saving articles

| Layer     | Technology                     |
| --------- | ------------------------------ |
| Backend   | Python + FastAPI               |
| Database  | SQLite → PostgreSQL (later)    |
| ORM       | SQLAlchemy                     |
| ML Engine | scikit-learn, Surprise, pandas |
| Frontend  | React + TypeScript             |
| Auth      | JWT via FastAPI dependencies   |
| Infra     | Docker + GitHub Actions (CI)   |

| Feature                      | Status         |
| ---------------------------- | -------------- |
| Signup Route                 | Complete       |
| Password Hashing             | Complete       |
| Test Coverage for Signup     | Complete       |
| Database Model for Users     | Complete       |
| Recommendation Logic (basic) | Not Started    |
| Article Ingestion            | Not Started    |
| Login with JWT               | Not Started    |
| Frontend Signup/Login Form   | Not Started    |
| Recommendations Endpoint     | Not Started    |

Future Enhancements
- OAuth (Google/GitHub) login
- Article scraping from news APIs (NewsAPI, NYT)
- Real-time recommendation refresh with Redis
- User feedback loop (improves recommendations)